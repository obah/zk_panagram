{"noir_version":"1.0.0-beta.9+6abff2f16e1c1314ba30708d1cf032a536de3d19","hash":"16402089688720830024","abi":{"parameters":[{"name":"guess_hash","type":{"kind":"field"},"visibility":"private"},{"name":"answer_hash","type":{"kind":"field"},"visibility":"public"},{"name":"address","type":{"kind":"field"},"visibility":"public"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/62PQQ6AIAwELfFBLW2hvfkVifD/J2iUA4ncdJJme5rswvIQroPlTei59cRv0OhiTCI1x0pMO0YvpihakpGRmh7RmKuJZS+e0Um4UlPn1mXwX6/btXYXTPbD8M84ASn2kKtIAQAA","debug_symbols":"dY/BCoMwDIbfJece9CAMX2UMqTVKIKQltoMhvvuiKLrDTmny5/ubf4EB+zJ1JGOcoX0u0Csx09RxDD5TFJsuq4Oz7bIi2ghuulHJK0qGVgqzg7fnsi/Nyctes1dTKwcog1UzHIlxe63uoqv/aN00B1w/Lrwx/mWdD6Q/F0Nli+tmp+R7xiPFWCTcQuVPOpUzdtIYcCiKm92u2Qdf","file_map":{"50":{"source":"fn main(guess_hash: Field, answer_hash: pub Field, address: pub Field) {\n    //address is added to make each proof unique and avoid collisions\n\n    assert(guess_hash == answer_hash);\n}\n\n// #[test]\n// fn test_main() {\n//     main(1, 2);\n\n//     // Uncomment to make test fail\n//     // main(1, 1);\n// }\n\n//to generate verifier.sol contract\n//nargo compile -> to get the circuit bytecodes\n//bb write_vk --oracle_hash keccak -b ./target/zk_panagram.json -o ./target -> generate verification key\n//bb write_solidity_verifier -k ./target/vk -o ./target/Verifier.sol -> generate verifier contract\n","path":"/home/oluso/Documents/projects/noir/zk_panagram/circuits/src/main.nr"}},"names":["main"],"brillig_names":[]}